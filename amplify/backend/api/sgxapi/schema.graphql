type Project @model @key(name: "projectByOwner", fields: ["owner"]) {
	id: ID!
	name: String!
	description: String!
	filePath: String
	owner: String!
	states: [State] @connection(keyName: "byProject", fields: ["id"])
	filters: [Filter] @connection(keyName: "byProject", fields: ["id"])
}

type State @model @key(name: "byProject", fields: ["projectID"]) {
	id: ID!
	title: String!
	description: String!
	projectID: ID!
	project: Project @connection(fields: ["projectID"])
	comments: [Comment] @connection(keyName: "byState", fields: ["id"])
	filters: [StateFilter] @connection(keyName: "byState", fields: ["id"])
}

type StateFilter
	@model(queries: null)
	@key(name: "byState", fields: ["stateID", "filterID"])
	@key(name: "byFilter", fields: ["filterID", "stateID"]) {
	id: ID!
	stateID: ID!
	filterID: ID!
	state: State! @connection(fields: ["stateID"])
	filter: Filter! @connection(fields: ["filterID"])
}

type Filter @model @key(name: "byProject", fields: ["projectID"]) {
	id: ID!
	name: String!
	min: String!
	max: String!
	projectID: ID!
	project: Project @connection(fields: ["projectID"])
	states: [StateFilter] @connection(keyName: "byFilter", fields: ["id"])
}

type Comment @model @key(name: "byState", fields: ["stateID", "content"]) {
	id: ID!
	author: String!
	stateID: ID!
	state: State @connection(fields: ["stateID"])
	content: String!
}
